// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.1.0.
// **********************************************************************

"use strict;"

var assert     = require('assert');
var TarsStream = require('@tars/stream');


var CocklainStruct = CocklainStruct || {};
module.exports.CocklainStruct = CocklainStruct;

CocklainStruct.TPlaceholder = function() {
    this.placeholder = 0;
    this._classname = "CocklainStruct.TPlaceholder";
};
CocklainStruct.TPlaceholder._classname = "CocklainStruct.TPlaceholder";

CocklainStruct.TPlaceholder._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TPlaceholder._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TPlaceholder._readFrom = function (is) {
    var tmp = new CocklainStruct.TPlaceholder();
    tmp.placeholder = is.readInt8(0, true, 0);
    return tmp;
};
CocklainStruct.TPlaceholder.prototype._writeTo = function (os) {
    os.writeInt8(0, this.placeholder);
};
CocklainStruct.TPlaceholder.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TPlaceholder.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TPlaceholder.prototype.toObject = function() { 
    var tmp = {};

    tmp.placeholder = this.placeholder;
    
    return tmp;
}
CocklainStruct.TPlaceholder.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("placeholder") || (this.placeholder = json.placeholder);
}
CocklainStruct.TPlaceholder.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TPlaceholder.new = function () {
    return new CocklainStruct.TPlaceholder();
}
CocklainStruct.TPlaceholder.create = function (is) {
    return CocklainStruct.TPlaceholder._readFrom(is);
}
CocklainStruct.TNotifyGameConfig = function() {
    this.placeholder = 0;
    this._classname = "CocklainStruct.TNotifyGameConfig";
};
CocklainStruct.TNotifyGameConfig._classname = "CocklainStruct.TNotifyGameConfig";

CocklainStruct.TNotifyGameConfig._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TNotifyGameConfig._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TNotifyGameConfig._readFrom = function (is) {
    var tmp = new CocklainStruct.TNotifyGameConfig();
    tmp.placeholder = is.readInt8(0, true, 0);
    return tmp;
};
CocklainStruct.TNotifyGameConfig.prototype._writeTo = function (os) {
    os.writeInt8(0, this.placeholder);
};
CocklainStruct.TNotifyGameConfig.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TNotifyGameConfig.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TNotifyGameConfig.prototype.toObject = function() { 
    var tmp = {};

    tmp.placeholder = this.placeholder;
    
    return tmp;
}
CocklainStruct.TNotifyGameConfig.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("placeholder") || (this.placeholder = json.placeholder);
}
CocklainStruct.TNotifyGameConfig.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TNotifyGameConfig.new = function () {
    return new CocklainStruct.TNotifyGameConfig();
}
CocklainStruct.TNotifyGameConfig.create = function (is) {
    return CocklainStruct.TNotifyGameConfig._readFrom(is);
}
CocklainStruct.TCardInfo = function() {
    this.chairNo = 0;
    this.cards = new TarsStream.List(TarsStream.Int16);
    this._classname = "CocklainStruct.TCardInfo";
};
CocklainStruct.TCardInfo._classname = "CocklainStruct.TCardInfo";

CocklainStruct.TCardInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TCardInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TCardInfo._readFrom = function (is) {
    var tmp = new CocklainStruct.TCardInfo();
    tmp.chairNo = is.readUInt16(0, true, 0);
    tmp.cards = is.readList(1, true, TarsStream.List(TarsStream.Int16));
    return tmp;
};
CocklainStruct.TCardInfo.prototype._writeTo = function (os) {
    os.writeUInt16(0, this.chairNo);
    os.writeList(1, this.cards);
};
CocklainStruct.TCardInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TCardInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TCardInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.chairNo = this.chairNo;
    tmp.cards = this.cards.toObject();
    
    return tmp;
}
CocklainStruct.TCardInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("chairNo") || (this.chairNo = json.chairNo);
    !json.hasOwnProperty("cards") || (this.cards.readFromObject(json.cards));
}
CocklainStruct.TCardInfo.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TCardInfo.new = function () {
    return new CocklainStruct.TCardInfo();
}
CocklainStruct.TCardInfo.create = function (is) {
    return CocklainStruct.TCardInfo._readFrom(is);
}
CocklainStruct.TNotifyGameStart = function() {
    this.roundCurr = 0;
    this.cards = new TarsStream.List(TarsStream.Int16);
    this.listChairNo = new TarsStream.List(TarsStream.Int32);
    this._classname = "CocklainStruct.TNotifyGameStart";
};
CocklainStruct.TNotifyGameStart._classname = "CocklainStruct.TNotifyGameStart";

CocklainStruct.TNotifyGameStart._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TNotifyGameStart._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TNotifyGameStart._readFrom = function (is) {
    var tmp = new CocklainStruct.TNotifyGameStart();
    tmp.roundCurr = is.readInt8(0, true, 0);
    tmp.cards = is.readList(1, true, TarsStream.List(TarsStream.Int16));
    tmp.listChairNo = is.readList(2, true, TarsStream.List(TarsStream.Int32));
    return tmp;
};
CocklainStruct.TNotifyGameStart.prototype._writeTo = function (os) {
    os.writeInt8(0, this.roundCurr);
    os.writeList(1, this.cards);
    os.writeList(2, this.listChairNo);
};
CocklainStruct.TNotifyGameStart.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TNotifyGameStart.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TNotifyGameStart.prototype.toObject = function() { 
    var tmp = {};

    tmp.roundCurr = this.roundCurr;
    tmp.cards = this.cards.toObject();
    tmp.listChairNo = this.listChairNo.toObject();
    
    return tmp;
}
CocklainStruct.TNotifyGameStart.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("roundCurr") || (this.roundCurr = json.roundCurr);
    !json.hasOwnProperty("cards") || (this.cards.readFromObject(json.cards));
    !json.hasOwnProperty("listChairNo") || (this.listChairNo.readFromObject(json.listChairNo));
}
CocklainStruct.TNotifyGameStart.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TNotifyGameStart.new = function () {
    return new CocklainStruct.TNotifyGameStart();
}
CocklainStruct.TNotifyGameStart.create = function (is) {
    return CocklainStruct.TNotifyGameStart._readFrom(is);
}
CocklainStruct.TReqSnatchbanker = function() {
    this.multiple = 0;
    this._classname = "CocklainStruct.TReqSnatchbanker";
};
CocklainStruct.TReqSnatchbanker._classname = "CocklainStruct.TReqSnatchbanker";

CocklainStruct.TReqSnatchbanker._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TReqSnatchbanker._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TReqSnatchbanker._readFrom = function (is) {
    var tmp = new CocklainStruct.TReqSnatchbanker();
    tmp.multiple = is.readUInt8(0, true, 0);
    return tmp;
};
CocklainStruct.TReqSnatchbanker.prototype._writeTo = function (os) {
    os.writeUInt8(0, this.multiple);
};
CocklainStruct.TReqSnatchbanker.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TReqSnatchbanker.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TReqSnatchbanker.prototype.toObject = function() { 
    var tmp = {};

    tmp.multiple = this.multiple;
    
    return tmp;
}
CocklainStruct.TReqSnatchbanker.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("multiple") || (this.multiple = json.multiple);
}
CocklainStruct.TReqSnatchbanker.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TReqSnatchbanker.new = function () {
    return new CocklainStruct.TReqSnatchbanker();
}
CocklainStruct.TReqSnatchbanker.create = function (is) {
    return CocklainStruct.TReqSnatchbanker._readFrom(is);
}
CocklainStruct.TNotifySnatchbanker = function() {
    this.chairNo = 0;
    this.multiple = 0;
    this._classname = "CocklainStruct.TNotifySnatchbanker";
};
CocklainStruct.TNotifySnatchbanker._classname = "CocklainStruct.TNotifySnatchbanker";

CocklainStruct.TNotifySnatchbanker._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TNotifySnatchbanker._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TNotifySnatchbanker._readFrom = function (is) {
    var tmp = new CocklainStruct.TNotifySnatchbanker();
    tmp.chairNo = is.readUInt16(1, true, 0);
    tmp.multiple = is.readUInt8(2, true, 0);
    return tmp;
};
CocklainStruct.TNotifySnatchbanker.prototype._writeTo = function (os) {
    os.writeUInt16(1, this.chairNo);
    os.writeUInt8(2, this.multiple);
};
CocklainStruct.TNotifySnatchbanker.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TNotifySnatchbanker.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TNotifySnatchbanker.prototype.toObject = function() { 
    var tmp = {};

    tmp.chairNo = this.chairNo;
    tmp.multiple = this.multiple;
    
    return tmp;
}
CocklainStruct.TNotifySnatchbanker.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("chairNo") || (this.chairNo = json.chairNo);
    !json.hasOwnProperty("multiple") || (this.multiple = json.multiple);
}
CocklainStruct.TNotifySnatchbanker.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TNotifySnatchbanker.new = function () {
    return new CocklainStruct.TNotifySnatchbanker();
}
CocklainStruct.TNotifySnatchbanker.create = function (is) {
    return CocklainStruct.TNotifySnatchbanker._readFrom(is);
}
CocklainStruct.TNotifySnatchbankerFinish = function() {
    this.dealer = 0;
    this._classname = "CocklainStruct.TNotifySnatchbankerFinish";
};
CocklainStruct.TNotifySnatchbankerFinish._classname = "CocklainStruct.TNotifySnatchbankerFinish";

CocklainStruct.TNotifySnatchbankerFinish._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TNotifySnatchbankerFinish._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TNotifySnatchbankerFinish._readFrom = function (is) {
    var tmp = new CocklainStruct.TNotifySnatchbankerFinish();
    tmp.dealer = is.readUInt16(0, true, 0);
    return tmp;
};
CocklainStruct.TNotifySnatchbankerFinish.prototype._writeTo = function (os) {
    os.writeUInt16(0, this.dealer);
};
CocklainStruct.TNotifySnatchbankerFinish.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TNotifySnatchbankerFinish.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TNotifySnatchbankerFinish.prototype.toObject = function() { 
    var tmp = {};

    tmp.dealer = this.dealer;
    
    return tmp;
}
CocklainStruct.TNotifySnatchbankerFinish.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("dealer") || (this.dealer = json.dealer);
}
CocklainStruct.TNotifySnatchbankerFinish.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TNotifySnatchbankerFinish.new = function () {
    return new CocklainStruct.TNotifySnatchbankerFinish();
}
CocklainStruct.TNotifySnatchbankerFinish.create = function (is) {
    return CocklainStruct.TNotifySnatchbankerFinish._readFrom(is);
}
CocklainStruct.TUserBolus = function() {
    this.chairNo = 0;
    this.multiple = 0;
    this._classname = "CocklainStruct.TUserBolus";
};
CocklainStruct.TUserBolus._classname = "CocklainStruct.TUserBolus";

CocklainStruct.TUserBolus._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TUserBolus._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TUserBolus._readFrom = function (is) {
    var tmp = new CocklainStruct.TUserBolus();
    tmp.chairNo = is.readUInt16(0, true, 0);
    tmp.multiple = is.readUInt8(1, true, 0);
    return tmp;
};
CocklainStruct.TUserBolus.prototype._writeTo = function (os) {
    os.writeUInt16(0, this.chairNo);
    os.writeUInt8(1, this.multiple);
};
CocklainStruct.TUserBolus.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TUserBolus.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TUserBolus.prototype.toObject = function() { 
    var tmp = {};

    tmp.chairNo = this.chairNo;
    tmp.multiple = this.multiple;
    
    return tmp;
}
CocklainStruct.TUserBolus.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("chairNo") || (this.chairNo = json.chairNo);
    !json.hasOwnProperty("multiple") || (this.multiple = json.multiple);
}
CocklainStruct.TUserBolus.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TUserBolus.new = function () {
    return new CocklainStruct.TUserBolus();
}
CocklainStruct.TUserBolus.create = function (is) {
    return CocklainStruct.TUserBolus._readFrom(is);
}
CocklainStruct.TRespChooseScoreBegin = function() {
    this.baseScore1 = 0;
    this.baseScore2 = 0;
    this.listTUserBolus = new TarsStream.List(CocklainStruct.TUserBolus);
    this._classname = "CocklainStruct.TRespChooseScoreBegin";
};
CocklainStruct.TRespChooseScoreBegin._classname = "CocklainStruct.TRespChooseScoreBegin";

CocklainStruct.TRespChooseScoreBegin._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TRespChooseScoreBegin._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TRespChooseScoreBegin._readFrom = function (is) {
    var tmp = new CocklainStruct.TRespChooseScoreBegin();
    tmp.baseScore1 = is.readUInt8(0, true, 0);
    tmp.baseScore2 = is.readUInt8(1, true, 0);
    tmp.listTUserBolus = is.readList(2, true, TarsStream.List(CocklainStruct.TUserBolus));
    return tmp;
};
CocklainStruct.TRespChooseScoreBegin.prototype._writeTo = function (os) {
    os.writeUInt8(0, this.baseScore1);
    os.writeUInt8(1, this.baseScore2);
    os.writeList(2, this.listTUserBolus);
};
CocklainStruct.TRespChooseScoreBegin.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TRespChooseScoreBegin.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TRespChooseScoreBegin.prototype.toObject = function() { 
    var tmp = {};

    tmp.baseScore1 = this.baseScore1;
    tmp.baseScore2 = this.baseScore2;
    tmp.listTUserBolus = this.listTUserBolus.toObject();
    
    return tmp;
}
CocklainStruct.TRespChooseScoreBegin.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("baseScore1") || (this.baseScore1 = json.baseScore1);
    !json.hasOwnProperty("baseScore2") || (this.baseScore2 = json.baseScore2);
    !json.hasOwnProperty("listTUserBolus") || (this.listTUserBolus.readFromObject(json.listTUserBolus));
}
CocklainStruct.TRespChooseScoreBegin.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TRespChooseScoreBegin.new = function () {
    return new CocklainStruct.TRespChooseScoreBegin();
}
CocklainStruct.TRespChooseScoreBegin.create = function (is) {
    return CocklainStruct.TRespChooseScoreBegin._readFrom(is);
}
CocklainStruct.TReqChooseScore = function() {
    this.chooseScore = 0;
    this._classname = "CocklainStruct.TReqChooseScore";
};
CocklainStruct.TReqChooseScore._classname = "CocklainStruct.TReqChooseScore";

CocklainStruct.TReqChooseScore._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TReqChooseScore._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TReqChooseScore._readFrom = function (is) {
    var tmp = new CocklainStruct.TReqChooseScore();
    tmp.chooseScore = is.readUInt8(0, true, 0);
    return tmp;
};
CocklainStruct.TReqChooseScore.prototype._writeTo = function (os) {
    os.writeUInt8(0, this.chooseScore);
};
CocklainStruct.TReqChooseScore.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TReqChooseScore.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TReqChooseScore.prototype.toObject = function() { 
    var tmp = {};

    tmp.chooseScore = this.chooseScore;
    
    return tmp;
}
CocklainStruct.TReqChooseScore.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("chooseScore") || (this.chooseScore = json.chooseScore);
}
CocklainStruct.TReqChooseScore.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TReqChooseScore.new = function () {
    return new CocklainStruct.TReqChooseScore();
}
CocklainStruct.TReqChooseScore.create = function (is) {
    return CocklainStruct.TReqChooseScore._readFrom(is);
}
CocklainStruct.TNotifyChooseScore = function() {
    this.chairNo = 0;
    this.chooseScore = 0;
    this._classname = "CocklainStruct.TNotifyChooseScore";
};
CocklainStruct.TNotifyChooseScore._classname = "CocklainStruct.TNotifyChooseScore";

CocklainStruct.TNotifyChooseScore._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TNotifyChooseScore._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TNotifyChooseScore._readFrom = function (is) {
    var tmp = new CocklainStruct.TNotifyChooseScore();
    tmp.chairNo = is.readUInt16(1, true, 0);
    tmp.chooseScore = is.readUInt8(2, true, 0);
    return tmp;
};
CocklainStruct.TNotifyChooseScore.prototype._writeTo = function (os) {
    os.writeUInt16(1, this.chairNo);
    os.writeUInt8(2, this.chooseScore);
};
CocklainStruct.TNotifyChooseScore.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TNotifyChooseScore.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TNotifyChooseScore.prototype.toObject = function() { 
    var tmp = {};

    tmp.chairNo = this.chairNo;
    tmp.chooseScore = this.chooseScore;
    
    return tmp;
}
CocklainStruct.TNotifyChooseScore.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("chairNo") || (this.chairNo = json.chairNo);
    !json.hasOwnProperty("chooseScore") || (this.chooseScore = json.chooseScore);
}
CocklainStruct.TNotifyChooseScore.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TNotifyChooseScore.new = function () {
    return new CocklainStruct.TNotifyChooseScore();
}
CocklainStruct.TNotifyChooseScore.create = function (is) {
    return CocklainStruct.TNotifyChooseScore._readFrom(is);
}
CocklainStruct.TNotifyChooseScoreFinish = function() {
    this.listUserScore = new TarsStream.List(CocklainStruct.TNotifyChooseScore);
    this._classname = "CocklainStruct.TNotifyChooseScoreFinish";
};
CocklainStruct.TNotifyChooseScoreFinish._classname = "CocklainStruct.TNotifyChooseScoreFinish";

CocklainStruct.TNotifyChooseScoreFinish._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TNotifyChooseScoreFinish._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TNotifyChooseScoreFinish._readFrom = function (is) {
    var tmp = new CocklainStruct.TNotifyChooseScoreFinish();
    tmp.listUserScore = is.readList(0, true, TarsStream.List(CocklainStruct.TNotifyChooseScore));
    return tmp;
};
CocklainStruct.TNotifyChooseScoreFinish.prototype._writeTo = function (os) {
    os.writeList(0, this.listUserScore);
};
CocklainStruct.TNotifyChooseScoreFinish.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TNotifyChooseScoreFinish.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TNotifyChooseScoreFinish.prototype.toObject = function() { 
    var tmp = {};

    tmp.listUserScore = this.listUserScore.toObject();
    
    return tmp;
}
CocklainStruct.TNotifyChooseScoreFinish.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("listUserScore") || (this.listUserScore.readFromObject(json.listUserScore));
}
CocklainStruct.TNotifyChooseScoreFinish.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TNotifyChooseScoreFinish.new = function () {
    return new CocklainStruct.TNotifyChooseScoreFinish();
}
CocklainStruct.TNotifyChooseScoreFinish.create = function (is) {
    return CocklainStruct.TNotifyChooseScoreFinish._readFrom(is);
}
CocklainStruct.TRespSellBuyBegin = function() {
    this.vecSellBuyScores = new TarsStream.List(TarsStream.Int64);
    this._classname = "CocklainStruct.TRespSellBuyBegin";
};
CocklainStruct.TRespSellBuyBegin._classname = "CocklainStruct.TRespSellBuyBegin";

CocklainStruct.TRespSellBuyBegin._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TRespSellBuyBegin._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TRespSellBuyBegin._readFrom = function (is) {
    var tmp = new CocklainStruct.TRespSellBuyBegin();
    tmp.vecSellBuyScores = is.readList(0, true, TarsStream.List(TarsStream.Int64));
    return tmp;
};
CocklainStruct.TRespSellBuyBegin.prototype._writeTo = function (os) {
    os.writeList(0, this.vecSellBuyScores);
};
CocklainStruct.TRespSellBuyBegin.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TRespSellBuyBegin.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TRespSellBuyBegin.prototype.toObject = function() { 
    var tmp = {};

    tmp.vecSellBuyScores = this.vecSellBuyScores.toObject();
    
    return tmp;
}
CocklainStruct.TRespSellBuyBegin.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("vecSellBuyScores") || (this.vecSellBuyScores.readFromObject(json.vecSellBuyScores));
}
CocklainStruct.TRespSellBuyBegin.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TRespSellBuyBegin.new = function () {
    return new CocklainStruct.TRespSellBuyBegin();
}
CocklainStruct.TRespSellBuyBegin.create = function (is) {
    return CocklainStruct.TRespSellBuyBegin._readFrom(is);
}
CocklainStruct.TReqSellScore = function() {
    this.score = 0;
    this._classname = "CocklainStruct.TReqSellScore";
};
CocklainStruct.TReqSellScore._classname = "CocklainStruct.TReqSellScore";

CocklainStruct.TReqSellScore._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TReqSellScore._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TReqSellScore._readFrom = function (is) {
    var tmp = new CocklainStruct.TReqSellScore();
    tmp.score = is.readUInt8(0, true, 0);
    return tmp;
};
CocklainStruct.TReqSellScore.prototype._writeTo = function (os) {
    os.writeUInt8(0, this.score);
};
CocklainStruct.TReqSellScore.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TReqSellScore.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TReqSellScore.prototype.toObject = function() { 
    var tmp = {};

    tmp.score = this.score;
    
    return tmp;
}
CocklainStruct.TReqSellScore.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("score") || (this.score = json.score);
}
CocklainStruct.TReqSellScore.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TReqSellScore.new = function () {
    return new CocklainStruct.TReqSellScore();
}
CocklainStruct.TReqSellScore.create = function (is) {
    return CocklainStruct.TReqSellScore._readFrom(is);
}
CocklainStruct.TNotifySellScore = function() {
    this.chairNo = 0;
    this.score = 0;
    this._classname = "CocklainStruct.TNotifySellScore";
};
CocklainStruct.TNotifySellScore._classname = "CocklainStruct.TNotifySellScore";

CocklainStruct.TNotifySellScore._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TNotifySellScore._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TNotifySellScore._readFrom = function (is) {
    var tmp = new CocklainStruct.TNotifySellScore();
    tmp.chairNo = is.readUInt16(1, true, 0);
    tmp.score = is.readUInt8(2, true, 0);
    return tmp;
};
CocklainStruct.TNotifySellScore.prototype._writeTo = function (os) {
    os.writeUInt16(1, this.chairNo);
    os.writeUInt8(2, this.score);
};
CocklainStruct.TNotifySellScore.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TNotifySellScore.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TNotifySellScore.prototype.toObject = function() { 
    var tmp = {};

    tmp.chairNo = this.chairNo;
    tmp.score = this.score;
    
    return tmp;
}
CocklainStruct.TNotifySellScore.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("chairNo") || (this.chairNo = json.chairNo);
    !json.hasOwnProperty("score") || (this.score = json.score);
}
CocklainStruct.TNotifySellScore.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TNotifySellScore.new = function () {
    return new CocklainStruct.TNotifySellScore();
}
CocklainStruct.TNotifySellScore.create = function (is) {
    return CocklainStruct.TNotifySellScore._readFrom(is);
}
CocklainStruct.TReqBuyScore = function() {
    this.chairNo = 0;
    this._classname = "CocklainStruct.TReqBuyScore";
};
CocklainStruct.TReqBuyScore._classname = "CocklainStruct.TReqBuyScore";

CocklainStruct.TReqBuyScore._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TReqBuyScore._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TReqBuyScore._readFrom = function (is) {
    var tmp = new CocklainStruct.TReqBuyScore();
    tmp.chairNo = is.readUInt16(0, true, 0);
    return tmp;
};
CocklainStruct.TReqBuyScore.prototype._writeTo = function (os) {
    os.writeUInt16(0, this.chairNo);
};
CocklainStruct.TReqBuyScore.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TReqBuyScore.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TReqBuyScore.prototype.toObject = function() { 
    var tmp = {};

    tmp.chairNo = this.chairNo;
    
    return tmp;
}
CocklainStruct.TReqBuyScore.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("chairNo") || (this.chairNo = json.chairNo);
}
CocklainStruct.TReqBuyScore.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TReqBuyScore.new = function () {
    return new CocklainStruct.TReqBuyScore();
}
CocklainStruct.TReqBuyScore.create = function (is) {
    return CocklainStruct.TReqBuyScore._readFrom(is);
}
CocklainStruct.TNotifyBuyScore = function() {
    this.chairNo = 0;
    this.chairNoFrom = 0;
    this._classname = "CocklainStruct.TNotifyBuyScore";
};
CocklainStruct.TNotifyBuyScore._classname = "CocklainStruct.TNotifyBuyScore";

CocklainStruct.TNotifyBuyScore._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TNotifyBuyScore._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TNotifyBuyScore._readFrom = function (is) {
    var tmp = new CocklainStruct.TNotifyBuyScore();
    tmp.chairNo = is.readUInt16(0, true, 0);
    tmp.chairNoFrom = is.readUInt16(1, true, 0);
    return tmp;
};
CocklainStruct.TNotifyBuyScore.prototype._writeTo = function (os) {
    os.writeUInt16(0, this.chairNo);
    os.writeUInt16(1, this.chairNoFrom);
};
CocklainStruct.TNotifyBuyScore.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TNotifyBuyScore.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TNotifyBuyScore.prototype.toObject = function() { 
    var tmp = {};

    tmp.chairNo = this.chairNo;
    tmp.chairNoFrom = this.chairNoFrom;
    
    return tmp;
}
CocklainStruct.TNotifyBuyScore.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("chairNo") || (this.chairNo = json.chairNo);
    !json.hasOwnProperty("chairNoFrom") || (this.chairNoFrom = json.chairNoFrom);
}
CocklainStruct.TNotifyBuyScore.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TNotifyBuyScore.new = function () {
    return new CocklainStruct.TNotifyBuyScore();
}
CocklainStruct.TNotifyBuyScore.create = function (is) {
    return CocklainStruct.TNotifyBuyScore._readFrom(is);
}
CocklainStruct.TRoundResult = function() {
    this.cardInfo = new CocklainStruct.TCardInfo();
    this.cardPattern = 0;
    this.winScore = 0;
    this.remainScore = 0;
    this._classname = "CocklainStruct.TRoundResult";
};
CocklainStruct.TRoundResult._classname = "CocklainStruct.TRoundResult";

CocklainStruct.TRoundResult._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TRoundResult._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TRoundResult._readFrom = function (is) {
    var tmp = new CocklainStruct.TRoundResult();
    tmp.cardInfo = is.readStruct(0, true, CocklainStruct.TCardInfo);
    tmp.cardPattern = is.readUInt8(1, false, 0);
    tmp.winScore = is.readInt32(2, true, 0);
    tmp.remainScore = is.readInt32(3, true, 0);
    return tmp;
};
CocklainStruct.TRoundResult.prototype._writeTo = function (os) {
    os.writeStruct(0, this.cardInfo);
    os.writeUInt8(1, this.cardPattern);
    os.writeInt32(2, this.winScore);
    os.writeInt32(3, this.remainScore);
};
CocklainStruct.TRoundResult.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TRoundResult.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TRoundResult.prototype.toObject = function() { 
    var tmp = {};

    tmp.cardInfo = this.cardInfo.toObject();
    tmp.cardPattern = this.cardPattern;
    tmp.winScore = this.winScore;
    tmp.remainScore = this.remainScore;
    
    return tmp;
}
CocklainStruct.TRoundResult.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("cardInfo") || (this.cardInfo.readFromObject(json.cardInfo));
    !json.hasOwnProperty("cardPattern") || (this.cardPattern = json.cardPattern);
    !json.hasOwnProperty("winScore") || (this.winScore = json.winScore);
    !json.hasOwnProperty("remainScore") || (this.remainScore = json.remainScore);
}
CocklainStruct.TRoundResult.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TRoundResult.new = function () {
    return new CocklainStruct.TRoundResult();
}
CocklainStruct.TRoundResult.create = function (is) {
    return CocklainStruct.TRoundResult._readFrom(is);
}
CocklainStruct.TNotifyGameFinish = function() {
    this.listRoundResult = new TarsStream.List(CocklainStruct.TRoundResult);
    this._classname = "CocklainStruct.TNotifyGameFinish";
};
CocklainStruct.TNotifyGameFinish._classname = "CocklainStruct.TNotifyGameFinish";

CocklainStruct.TNotifyGameFinish._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TNotifyGameFinish._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TNotifyGameFinish._readFrom = function (is) {
    var tmp = new CocklainStruct.TNotifyGameFinish();
    tmp.listRoundResult = is.readList(0, true, TarsStream.List(CocklainStruct.TRoundResult));
    return tmp;
};
CocklainStruct.TNotifyGameFinish.prototype._writeTo = function (os) {
    os.writeList(0, this.listRoundResult);
};
CocklainStruct.TNotifyGameFinish.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TNotifyGameFinish.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TNotifyGameFinish.prototype.toObject = function() { 
    var tmp = {};

    tmp.listRoundResult = this.listRoundResult.toObject();
    
    return tmp;
}
CocklainStruct.TNotifyGameFinish.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("listRoundResult") || (this.listRoundResult.readFromObject(json.listRoundResult));
}
CocklainStruct.TNotifyGameFinish.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TNotifyGameFinish.new = function () {
    return new CocklainStruct.TNotifyGameFinish();
}
CocklainStruct.TNotifyGameFinish.create = function (is) {
    return CocklainStruct.TNotifyGameFinish._readFrom(is);
}
CocklainStruct.TGameResult = function() {
    this.userID = 0;
    this.remainScore = 0;
    this._classname = "CocklainStruct.TGameResult";
};
CocklainStruct.TGameResult._classname = "CocklainStruct.TGameResult";

CocklainStruct.TGameResult._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TGameResult._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TGameResult._readFrom = function (is) {
    var tmp = new CocklainStruct.TGameResult();
    tmp.userID = is.readUInt32(0, true, 0);
    tmp.remainScore = is.readInt32(1, true, 0);
    return tmp;
};
CocklainStruct.TGameResult.prototype._writeTo = function (os) {
    os.writeUInt32(0, this.userID);
    os.writeInt32(1, this.remainScore);
};
CocklainStruct.TGameResult.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TGameResult.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TGameResult.prototype.toObject = function() { 
    var tmp = {};

    tmp.userID = this.userID;
    tmp.remainScore = this.remainScore;
    
    return tmp;
}
CocklainStruct.TGameResult.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("userID") || (this.userID = json.userID);
    !json.hasOwnProperty("remainScore") || (this.remainScore = json.remainScore);
}
CocklainStruct.TGameResult.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TGameResult.new = function () {
    return new CocklainStruct.TGameResult();
}
CocklainStruct.TGameResult.create = function (is) {
    return CocklainStruct.TGameResult._readFrom(is);
}
CocklainStruct.TNotifyGameOver = function() {
    this.listGameResult = new TarsStream.List(CocklainStruct.TGameResult);
    this._classname = "CocklainStruct.TNotifyGameOver";
};
CocklainStruct.TNotifyGameOver._classname = "CocklainStruct.TNotifyGameOver";

CocklainStruct.TNotifyGameOver._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TNotifyGameOver._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TNotifyGameOver._readFrom = function (is) {
    var tmp = new CocklainStruct.TNotifyGameOver();
    tmp.listGameResult = is.readList(0, true, TarsStream.List(CocklainStruct.TGameResult));
    return tmp;
};
CocklainStruct.TNotifyGameOver.prototype._writeTo = function (os) {
    os.writeList(0, this.listGameResult);
};
CocklainStruct.TNotifyGameOver.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TNotifyGameOver.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TNotifyGameOver.prototype.toObject = function() { 
    var tmp = {};

    tmp.listGameResult = this.listGameResult.toObject();
    
    return tmp;
}
CocklainStruct.TNotifyGameOver.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("listGameResult") || (this.listGameResult.readFromObject(json.listGameResult));
}
CocklainStruct.TNotifyGameOver.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TNotifyGameOver.new = function () {
    return new CocklainStruct.TNotifyGameOver();
}
CocklainStruct.TNotifyGameOver.create = function (is) {
    return CocklainStruct.TNotifyGameOver._readFrom(is);
}
CocklainStruct.TRespGameData = function() {
    this.gameConfig = new CocklainStruct.TNotifyGameConfig();
    this.gameStatus = 0;
    this.dealer = 0;
    this.listCardInfo = new TarsStream.List(CocklainStruct.TCardInfo);
    this.multiple = -1;
    this.chooseScoreConf = new CocklainStruct.TRespChooseScoreBegin();
    this.listUserScore = new TarsStream.List(CocklainStruct.TNotifyChooseScore);
    this._classname = "CocklainStruct.TRespGameData";
};
CocklainStruct.TRespGameData._classname = "CocklainStruct.TRespGameData";

CocklainStruct.TRespGameData._write = function (os, tag, value) { os.writeStruct(tag, value); }
CocklainStruct.TRespGameData._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
CocklainStruct.TRespGameData._readFrom = function (is) {
    var tmp = new CocklainStruct.TRespGameData();
    tmp.gameConfig = is.readStruct(1, true, CocklainStruct.TNotifyGameConfig);
    tmp.gameStatus = is.readUInt8(2, true, 0);
    tmp.dealer = is.readUInt16(5, false, 0);
    tmp.listCardInfo = is.readList(6, false, TarsStream.List(CocklainStruct.TCardInfo));
    tmp.multiple = is.readUInt8(7, true, -1);
    tmp.chooseScoreConf = is.readStruct(10, false, CocklainStruct.TRespChooseScoreBegin);
    tmp.listUserScore = is.readList(11, false, TarsStream.List(CocklainStruct.TNotifyChooseScore));
    return tmp;
};
CocklainStruct.TRespGameData.prototype._writeTo = function (os) {
    os.writeStruct(1, this.gameConfig);
    os.writeUInt8(2, this.gameStatus);
    os.writeUInt16(5, this.dealer);
    os.writeList(6, this.listCardInfo);
    os.writeUInt8(7, this.multiple);
    os.writeStruct(10, this.chooseScoreConf);
    os.writeList(11, this.listUserScore);
};
CocklainStruct.TRespGameData.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
CocklainStruct.TRespGameData.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
CocklainStruct.TRespGameData.prototype.toObject = function() { 
    var tmp = {};

    tmp.gameConfig = this.gameConfig.toObject();
    tmp.gameStatus = this.gameStatus;
    tmp.dealer = this.dealer;
    tmp.listCardInfo = this.listCardInfo.toObject();
    tmp.multiple = this.multiple;
    tmp.chooseScoreConf = this.chooseScoreConf.toObject();
    tmp.listUserScore = this.listUserScore.toObject();
    
    return tmp;
}
CocklainStruct.TRespGameData.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("gameConfig") || (this.gameConfig.readFromObject(json.gameConfig));
    !json.hasOwnProperty("gameStatus") || (this.gameStatus = json.gameStatus);
    !json.hasOwnProperty("dealer") || (this.dealer = json.dealer);
    !json.hasOwnProperty("listCardInfo") || (this.listCardInfo.readFromObject(json.listCardInfo));
    !json.hasOwnProperty("multiple") || (this.multiple = json.multiple);
    !json.hasOwnProperty("chooseScoreConf") || (this.chooseScoreConf.readFromObject(json.chooseScoreConf));
    !json.hasOwnProperty("listUserScore") || (this.listUserScore.readFromObject(json.listUserScore));
}
CocklainStruct.TRespGameData.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
CocklainStruct.TRespGameData.new = function () {
    return new CocklainStruct.TRespGameData();
}
CocklainStruct.TRespGameData.create = function (is) {
    return CocklainStruct.TRespGameData._readFrom(is);
}


